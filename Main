-- Blade Ball Dominator v6.2 (Ultimate Final Build)
do
    local RunService = game:GetService("RunService")
    local Players = game:GetService("Players")
    local UIS = game:GetService("UserInputService")
    local LocalPlayer = Players.LocalPlayer
    local Camera = workspace.CurrentCamera

    repeat task.wait() until LocalPlayer.Character
    local HumanoidRootPart = LocalPlayer.Character:WaitForChild("HumanoidRootPart")

    local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()
    local Window = Rayfield:CreateWindow({
        Name = "ðŸŒŠ Sea Hub Ultimate",
        LoadingTitle = "Blade Ball Systems Initialized",
        LoadingSubtitle = "Stable Build v6.2",
        Configuration = {TweenSpeed = 0.15, ExitOnClose = false}
    })

    local Combat = {
        AutoParry = {Enabled = false, Prediction = 0.12, Cooldown = 0},
        AutoDash = {Enabled = false, Cooldown = 0},
        ParryLock = false
    }

    local Visuals = {
        Tracers = false,
        ActiveLines = {},
        LineTTL = 15
    }

    local function GetBall()
        local ball = workspace:FindFirstChild("Ball")
        if not ball then ball = workspace:WaitForChild("Ball", 2) end
        return ball and ball:IsA("BasePart") and ball or nil
    end

    local function SendKey(key, state)
        pcall(function()
            game:GetService("VirtualInputManager"):SendKeyEvent(state, key, false, nil)
        end)
    end

    local function ExecuteParry()
        if tick() - Combat.AutoParry.Cooldown < 0.5 then return end
        Combat.ParryLock = true
        SendKey(Enum.KeyCode.E, true)
        task.wait(0.02)
        SendKey(Enum.KeyCode.E, false)
        Combat.AutoParry.Cooldown = tick()
        task.wait(0.1)
        Combat.ParryLock = false
    end

    local function CalculateTrajectory(ball)
        local ballPos = ball.Position
        local ballVel = ball.Velocity.Magnitude
        local distance = (HumanoidRootPart.Position - ballPos).Magnitude
        return distance / math.max(ballVel, 25)
    end

    local function CombatLoop()
        if Combat.ParryLock then return end
        pcall(function()
            local ball = GetBall()
            if not ball then return end
            
            if Combat.AutoParry.Enabled then
                local trajectory = CalculateTrajectory(ball)
                if (trajectory + Combat.AutoParry.Prediction) < 0.2 then
                    ExecuteParry()
                end
            end

            if Combat.AutoDash.Enabled and tick() - Combat.AutoDash.Cooldown >= 1.95 then
                SendKey(Enum.KeyCode.Q, true)
                task.wait(0.05)
                SendKey(Enum.KeyCode.Q, false)
                Combat.AutoDash.Cooldown = tick()
            end
        end)
    end

    local function UpdateTracers()
        if not Visuals.Tracers then return end
        local ball = GetBall()
        
        if ball and HumanoidRootPart then
            local success, startPos = pcall(Camera.WorldToViewportPoint, Camera, HumanoidRootPart.Position)
            local success2, endPos = pcall(Camera.WorldToViewportPoint, Camera, ball.Position)
            
            if success and success2 and startPos.Z > 0 and endPos.Z > 0 then
                local line = Drawing.new("Line")
                line.Visible = true
                line.Color = Color3.fromRGB(255, 50, 50)
                line.Thickness = 2
                line.From = Vector2.new(startPos.X, startPos.Y)
                line.To = Vector2.new(endPos.X, endPos.Y)
                table.insert(Visuals.ActiveLines, {Object = line, Created = tick()})
            end
        end
        
        for i = #Visuals.ActiveLines, 1, -1 do
            if (tick() - Visuals.ActiveLines[i].Created > Visuals.LineTTL) then
                pcall(function()
                    Visuals.ActiveLines[i].Object.Visible = false
                    Visuals.ActiveLines[i].Object:Remove()
                end)
                table.remove(Visuals.ActiveLines, i)
            end
        end
    end

    local CombatTab = Window:CreateTab("Combat", 4483362458)
    CombatTab:CreateSection("Parry Systems")
    CombatTab:CreateToggle({Name = "Smart Parry", CurrentValue = false, Callback = function(s) Combat.AutoParry.Enabled = s end})
    CombatTab:CreateSlider({Name = "Prediction", Range = {0.1,0.25}, Increment = 0.005, Suffix = "s", CurrentValue = 0.12, Callback = function(v) Combat.AutoParry.Prediction = v end})
    CombatTab:CreateSection("Mobility")
    CombatTab:CreateToggle({Name = "Auto Dash", CurrentValue = false, Callback = function(s) Combat.AutoDash.Enabled = s end})

    local VisualTab = Window:CreateTab("Visuals", 7733960981)
    VisualTab:CreateToggle({Name = "Ball Tracers", CurrentValue = false, Callback = function(s)
        Visuals.Tracers = s
        if not s then
            for _,l in pairs(Visuals.ActiveLines) do pcall(l.Object.Remove, l.Object) end
            Visuals.ActiveLines = {}
        end
    end})

    RunService.Heartbeat:Connect(function()
        pcall(CombatLoop)
        pcall(UpdateTracers)
    end)

    LocalPlayer.Idled:Connect(function()
        pcall(function()
            game:GetService("VirtualUser"):CaptureController()
            game:GetService("VirtualUser"):ClickButton2(Vector2.new())
        end)
    end)

    UIS.InputBegan:Connect(function(i)
        if i.KeyCode == Enum.KeyCode.RightControl then
            Rayfield:ToggleUI()
        end
    end)
end              line.Visible = true
                            line.Color = Color3.new(1, 0.2, 0.2)
                            line.Thickness = 2
                            line.From = Vector2.new(start.X, start.Y)
                            line.To = Vector2.new(target.X, target.Y)
                            table.insert(Visuals.Lines, line)
                        end
                    end
                    
                    -- Cleanup old lines
                    for i = #Visuals.Lines, 1, -1 do
                        if i % 5 == 0 then
                            pcall(Visuals.Lines[i].Remove, Visuals.Lines[i])
                            table.remove(Visuals.Lines, i)
                        end
                    end
                end)
            end
        end
    end)

    -- Core Game Loop
    RunService.Heartbeat:Connect(function()
        pcall(CombatLoop)
        if Movement.AutoDash then
            pcall(function()
                if tick() - Movement.DashCooldown >= 2 then
                    keypress(0x51)
                    task.wait(0.05)
                    keyrelease(0x51)
                    Movement.DashCooldown = tick()
                end
            end)
        end
    end)

    -- Anti-AFK System
    local VirtualUser = game:GetService("VirtualUser")
    LocalPlayer.Idled:Connect(function()
        pcall(function()
            VirtualUser:CaptureController()
            VirtualUser:ClickButton2(Vector2.new())
        end)
    end)

    -- Initialization Success
    print("Sea Hub Ultimate Activated | System Nominal")
end
